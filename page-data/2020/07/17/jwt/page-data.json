{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/07/17/jwt/","result":{"data":{"site":{"siteMetadata":{"title":"Pensando em Códigos"}},"markdownRemark":{"id":"7d05c08f-4be9-5b5e-86f7-9ffa132f5d61","excerpt":"O que é JWT? Json Web Tokens é uma especificação (RFC 7519) muito popular, que define uma forma compacta, auto-contida e URL Safe de transmitir dados de forma…","html":"<h1>O que é JWT?</h1>\n<p><a href=\"https://en.wikipedia.org/wiki/JSON_Web_Token\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Json Web Tokens</a> é uma especificação (<a href=\"https://tools.ietf.org/html/rfc7519\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RFC 7519</a>) muito popular, que define uma forma compacta, auto-contida e <em>URL Safe</em> de transmitir dados de forma segura, usando JSON.</p>\n<p>JWTs podem ser usados para:</p>\n<ul>\n<li>“Afirmar” a identidade de um usuário entre partes interessadas.</li>\n<li>“Afirmar” direitos de um usuário entre partes interessadas.</li>\n<li>Transferir dados com segurança entre partes interessadas por um canal não seguro.</li>\n<li>Garantir a identidade de um usuário, uma vez que o destinatário confia na parte que afirma.</li>\n</ul>\n<p>O cenário de utilização mais comum para <em>JWTs</em> é garantir a autorização de clientes no acesso a <em>APIs REST</em> de maneira simples e segura.</p>\n<h2>Por que JWTs são tão populares?</h2>\n<p>JWT permite difundir e verificar a identidade de um usuário. O protocolo <a href=\"https://en.wikipedia.org/wiki/OpenID_Connect\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Open ID Connect</a> por exemplo, que é muito popular, utiliza JWTs.</p>\n<p>Assim que o usuário é autenticado, ele recebe um token JWT, que deve ser enviado em todas as requisições subsequentes. Numa arquitetura web, isso normalmente é feito usando <strong><em>local storage</em></strong> ou <strong><em>cookies</em></strong> e é enviado no header <strong>Authorization</strong>.</p>\n<p>Esse esquema de autorização baseada em tokens permite ao servidor autorizar ou não a requisição, validando o token. A autenticidade do token pode ser verificada porque ele é <strong>assinado digitalmente</strong>.</p>\n<h3>O que é JWS?</h3>\n<p>JWS, ou <strong>JSON Web Signature</strong>, é muitas vezes confundido com JWT. Segundo a especificação (<a href=\"https://tools.ietf.org/html/rfc7515\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RFC7515</a>), JWS é o token JWT assinado digitalmente. </p>\n<p>O conteúdo dos dois componentes que formam o JWT (header e payload) passam pelo algoritmo de assinatura digital, gerando o terceiro componente do token, sua assinatura.</p>\n<h2>Componentes de um JWT/JWS</h2>\n<p>O conteúdo do JWT é um <em>payload</em> JSON contendo quaisquer informações que permitam o servidor conceder a autorização posteriormente.</p>\n<p>O JWT é divido em 3 segmentos, cada parte codificado em <a href=\"https://en.wikipedia.org/wiki/Base64\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><strong>BASE64URL</strong></a>:</p>\n<ul>\n<li><em>header</em> - descreve o algoritmo criptográfico usado para assinar o token e pode conter outros campos adicionais</li>\n<li><em>payload</em> - pode conter qualquer informação, no formato de <em>claims</em></li>\n<li><em>signature</em> (JWS) - assinatura digital, codificado com o algoritmo declarado no <em>header</em>, que permite validar o JWT</li>\n</ul>\n<h2>Claims</h2>\n<p>O <em>payload</em> do JWT é formado por <strong><em>claims</em></strong>, que nada mais são do que afirmações sobre o usuário autenticado.</p>\n<p><em>Claims</em> podem ser customizadas de acordo com o seu caso, mas existem as predefinidas de acordo com a <a href=\"http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html#rfc.section.4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">RFC 7519</a>.</p>\n<p><em>Claims</em> padronizadas:</p>\n<ul>\n<li>iss - <em>issuer</em>, emissor</li>\n<li>exp - <em>expiration</em>, data de expiração (<em>timestamp</em>)</li>\n<li>iat - <em>issued at</em>, data de emissão (<em>timestamp</em>)</li>\n<li>nbf - <em>not before</em>, data de ativação</li>\n<li>jti - identificador único, evita que o token seja reutilizado</li>\n<li>sub - <em>subject</em>, assunto</li>\n<li>aud - <em>audience</em>, audiência</li>\n</ul>\n<p>Exemplo de <em>header</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;alg&quot;: &quot;HS256&quot;,\n  &quot;typ&quot;: &quot;JWT&quot;\n}</code></pre></div>\n<p>Exemplo de <em>payload</em>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;sub&quot;: &quot;blog&quot;,\n  &quot;name&quot;: &quot;Giovani Racca&quot;,\n  &quot;iss&quot;: &quot;pensandoemcodigos.net&quot;\n}</code></pre></div>\n<p>Exemplo de um JWS:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1OTUwMTA0MzAsImV4cCI6MTU5NTAxMDczMCwiaXNzIjoicGVuc2FuZG9lbWNvZGlnb3MubmV0Iiwic3ViIjoiYmxvZyJ9.jUJ8bLTZgBEiGBiRRE2qGGnVfdhNKN18CzgEl17Q8xzJbB5vEQPh2vFTgKpkbgXK0YNBfIj9t-Yj92PF6J6ixA</code></pre></div>\n<h3>jwt.io</h3>\n<p><a href=\"https://jwt.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jwt.io</a> é uma ferramenta muito útil para visualizar os componentes JWS.</p>\n<h2>Vantagens do JWT/JWS</h2>\n<ul>\n<li><em>stateless</em> - o servidor não precisa salvar nenhuma informação de sessão do usuário, todas as informações já estão contidas no token</li>\n<li>desacoplamento - a geração dos tokens é desacoplada da validação</li>\n<li>flexibilidade - como a especificação do payload é aberta, a especificação de papeis e permissões no controle de acesso fica muito flexível</li>\n<li>tamanho - JWTs são pequenos, sendo ideias para serem transmitidos em requisições HTTP</li>\n</ul>","frontmatter":{"title":"O que é JWT?","date":"01/07/20","description":"O que é JWT? Oque é JWS? Conceito, utilização e vantagens."}}},"pageContext":{"slug":"/2020/07/17/jwt/","previous":{"fields":{"slug":"/2020/06/29/"},"frontmatter":{"title":"Leituras mais interessantes da semana (22-28 jun)","tags":["artigos","arm","no code"]}},"next":{"fields":{"slug":"/2020/07/06/"},"frontmatter":{"title":"Leituras mais interessantes da semana (29jun-6jul)","tags":["leituras","hacking","kronos","wannacry"]}}}}}