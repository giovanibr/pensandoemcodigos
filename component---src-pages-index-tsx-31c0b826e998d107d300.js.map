{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","menuLinks","menu","map","node","frontmatter","tag","fields","slug","key","style","marginLeft","rhythm","marginBottom","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,sIA6EeA,UAzCG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAC/BC,EAAYT,EAAKG,KAAKC,aAAaK,UAEzC,OACE,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,EAAWQ,KAAMD,GAClD,kBAAC,IAAD,CAAKJ,MAAM,cACX,kBAAC,IAAD,MACCC,EAAMK,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACZ,GAA6B,SAAzBA,EAAKC,YAAYC,IAAgB,CACrC,IAAMT,EAAQO,EAAKC,YAAYR,OAASO,EAAKG,OAAOC,KACpD,OACE,6BAASC,IAAKL,EAAKG,OAAOC,KAAME,MAAO,CAACC,WAAYC,YAAO,MACzD,gCACE,wBACEF,MAAO,CACLG,aAAcD,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEI,UAAW,QAAUC,GAAIX,EAAKG,OAAOC,MACjDX,IAGL,+BAAQO,EAAKC,YAAYW,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQd,EAAKC,YAAYc,aAAef,EAAKgB,mBAcxD,IAAMC,EAAY","file":"component---src-pages-index-tsx-31c0b826e998d107d300.js","sourcesContent":["// Gatsby supports TypeScript natively!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\ntype Data = {\n  site: {\n    siteMetadata: {\n      title: string\n      menuLinks: {\n        name: string\n        link: string\n      }\n    }\n  }\n  allMarkdownRemark: {\n    edges: {\n      node: {\n        excerpt: string\n        frontmatter: {\n          title: string\n          date: string\n          description: string\n        }\n        fields: {\n          slug: string\n        }\n      }\n    }[]\n  }\n}\n\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const menuLinks = data.site.siteMetadata.menuLinks\n\n  return (\n    <Layout location={location} title={siteTitle} menu={menuLinks}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      {posts.map(({ node }) => {\n        if (node.frontmatter.tag === \"post\") {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article key={node.fields.slug} style={{marginLeft: rhythm(.5)}}>\n            <header>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n            </header>\n            <section>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </section>\n          </article>\n        )\n              }\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD/MM/YY\")\n            title\n            description\n            tag\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}